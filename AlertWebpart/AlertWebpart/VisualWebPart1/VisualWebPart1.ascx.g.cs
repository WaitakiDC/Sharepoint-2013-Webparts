//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlertWebpart.VisualWebPart1 {
    using System.Web.UI.WebControls.Expressions;
    using System.Web.UI.HtmlControls;
    using System.Collections;
    using System.Text;
    using System.Web.UI;
    using System.Collections.Generic;
    using System.Linq;
    using System.Xml.Linq;
    using Microsoft.SharePoint.WebPartPages;
    using System.Web.SessionState;
    using System.Configuration;
    using Microsoft.SharePoint;
    using System.Web;
    using System.Web.DynamicData;
    using System.Web.Caching;
    using System.Web.Profile;
    using System.ComponentModel.DataAnnotations;
    using System.Web.UI.WebControls;
    using System.Web.Security;
    using System;
    using Microsoft.SharePoint.Utilities;
    using System.Text.RegularExpressions;
    using System.Collections.Specialized;
    using System.Web.UI.WebControls.WebParts;
    using Microsoft.SharePoint.WebControls;
    using System.CodeDom.Compiler;
    
    
    public partial class VisualWebPart1 {
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected global::System.Web.UI.HtmlControls.HtmlGenericControl AlertItemsHere;
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebPartCodeGenerator", "12.0.0.0")]
        public static implicit operator global::System.Web.UI.TemplateControl(VisualWebPart1 target) 
        {
            return target == null ? null : target.TemplateControl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private global::System.Web.UI.HtmlControls.HtmlGenericControl @__BuildControlAlertItemsHere() {
            global::System.Web.UI.HtmlControls.HtmlGenericControl @__ctrl;
            @__ctrl = new global::System.Web.UI.HtmlControls.HtmlGenericControl("div");
            this.AlertItemsHere = @__ctrl;
            @__ctrl.ID = "AlertItemsHere";
            System.Web.UI.IParserAccessor @__parser = ((System.Web.UI.IParserAccessor)(@__ctrl));
            @__parser.AddParsedSubObject(new System.Web.UI.LiteralControl("\r\n\r\n        "));
            return @__ctrl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void @__BuildControlTree(global::AlertWebpart.VisualWebPart1.VisualWebPart1 @__ctrl) {
            System.Web.UI.IParserAccessor @__parser = ((System.Web.UI.IParserAccessor)(@__ctrl));
            @__parser.AddParsedSubObject(new System.Web.UI.LiteralControl("\r\n<head><title>Alerts</title>\r\n<style type=\"text/css\">\r\n\r\n    .timestamp {\r\n     " +
                        "   font-style:italic;\r\n        font-size:10px;\r\n    }\r\n\r\n#AlertContainer\r\n{\r\n\twi" +
                        "dth:350px;\r\n}\r\n\r\n#AlertBanner\r\n{\r\n\tpadding-left:20px;\r\n\tbackground: #d20202;\r\n\tf" +
                        "ont-family:Arial, Helvetica, sans-serif;\r\n\tfont-size:20px;\r\n\tfont-weight:bold;\r\n" +
                        "\tcolor:white;\r\n}\r\n\r\n#AlertsList\r\n{\r\n\tfont-family:Arial, Helvetica, sans-serif;\r\n" +
                        "\tfont-size:8px;\r\n\tpadding:0;\r\n\tmargin:0;\r\n}\r\n\r\n#AlertsList p\r\n{\r\n\tfont-family:Ar" +
                        "ial, Helvetica, sans-serif;\r\n\tfont-size:10px;\r\n}\r\n\r\n#AlertsList li\r\n{\r\n\tdisplay:" +
                        "block;\r\n\twidth:100%;\r\n\tbackground-color:#F2F2F2;\r\n}\r\n\r\n.AlertsText\r\n{\r\n\tvertical" +
                        "-align:text-top;\r\n\tposition:static;\r\n\tpadding-right:20px;\r\n    color:black;\r\n\tma" +
                        "rgin:0;\r\n\tmargin-top:-40px;\r\n\tmargin-left:45px;\r\n\tpadding-top:0px;\r\n\tdisplay: bl" +
                        "ock;\t\r\n}\r\n\r\n.AlertsText h1\r\n{\r\n    color:black;\r\n}\r\n\r\n\r\n.AlertsImage\r\n{\r\n\twidth:" +
                        "20px;\r\n\tpadding:10px;\r\n}\r\n\r\n.green\r\n{\r\n\twidth: 25px;\r\n\theight: 25px;\r\n\tbackgroun" +
                        "d: #669900;\r\n}\r\n\r\n.yellow\r\n{\r\n\twidth: 25px;\r\n\theight: 25px;\r\n\tbackground: #ff990" +
                        "0;\r\n}\r\n\r\n.red\r\n{\r\n\twidth: 25px;\r\n\theight: 25px;\r\n\tbackground: #d20202;\r\n}\r\n\r\n.Al" +
                        "ertItem\r\n{\r\n\twidth:100%;\r\n\tdisplay: table-row;\r\n}\r\n\r\n</style>\r\n<script>\r\n    (fu" +
                        "nction (factory) {\r\n        if (typeof define === \'function\' && define.amd) {\r\n " +
                        "           // AMD. Register as an anonymous module.\r\n            define([\'jquery" +
                        "\'], factory);\r\n        } else {\r\n            // Browser globals\r\n            fac" +
                        "tory(jQuery);\r\n        }\r\n    }(function ($) {\r\n        $.timeago = function (ti" +
                        "mestamp) {\r\n            if (timestamp instanceof Date) {\r\n                return" +
                        " inWords(timestamp);\r\n            } else if (typeof timestamp === \"string\") {\r\n " +
                        "               return inWords($.timeago.parse(timestamp));\r\n            } else i" +
                        "f (typeof timestamp === \"number\") {\r\n                return inWords(new Date(tim" +
                        "estamp));\r\n            } else {\r\n                return inWords($.timeago.dateti" +
                        "me(timestamp));\r\n            }\r\n        };\r\n        var $t = $.timeago;\r\n\r\n     " +
                        "   $.extend($.timeago, {\r\n            settings: {\r\n                refreshMillis" +
                        ": 60000,\r\n                allowPast: true,\r\n                allowFuture: false,\r" +
                        "\n                localeTitle: false,\r\n                cutoff: 0,\r\n              " +
                        "  strings: {\r\n                    prefixAgo: null,\r\n                    prefixFr" +
                        "omNow: null,\r\n                    suffixAgo: \"ago\",\r\n                    suffixF" +
                        "romNow: \"from now\",\r\n                    inPast: \'any moment now\',\r\n            " +
                        "        seconds: \"less than a minute\",\r\n                    minute: \"about a min" +
                        "ute\",\r\n                    minutes: \"%d minutes\",\r\n                    hour: \"ab" +
                        "out an hour\",\r\n                    hours: \"about %d hours\",\r\n                   " +
                        " day: \"a day\",\r\n                    days: \"%d days\",\r\n                    month:" +
                        " \"about a month\",\r\n                    months: \"%d months\",\r\n                   " +
                        " year: \"about a year\",\r\n                    years: \"%d years\",\r\n                " +
                        "    wordSeparator: \" \",\r\n                    numbers: []\r\n                }\r\n   " +
                        "         },\r\n\r\n            inWords: function (distanceMillis) {\r\n               " +
                        " if (!this.settings.allowPast && !this.settings.allowFuture) {\r\n                " +
                        "    throw \'timeago allowPast and allowFuture settings can not both be set to fal" +
                        "se.\';\r\n                }\r\n\r\n                var $l = this.settings.strings;\r\n   " +
                        "             var prefix = $l.prefixAgo;\r\n                var suffix = $l.suffixA" +
                        "go;\r\n                if (this.settings.allowFuture) {\r\n                    if (d" +
                        "istanceMillis < 0) {\r\n                        prefix = $l.prefixFromNow;\r\n      " +
                        "                  suffix = $l.suffixFromNow;\r\n                    }\r\n           " +
                        "     }\r\n\r\n                if (!this.settings.allowPast && distanceMillis >= 0) {" +
                        "\r\n                    return this.settings.strings.inPast;\r\n                }\r\n\r" +
                        "\n                var seconds = Math.abs(distanceMillis) / 1000;\r\n               " +
                        " var minutes = seconds / 60;\r\n                var hours = minutes / 60;\r\n       " +
                        "         var days = hours / 24;\r\n                var years = days / 365;\r\n\r\n    " +
                        "            function substitute(stringOrFunction, number) {\r\n                   " +
                        " var string = $.isFunction(stringOrFunction) ? stringOrFunction(number, distance" +
                        "Millis) : stringOrFunction;\r\n                    var value = ($l.numbers && $l.n" +
                        "umbers[number]) || number;\r\n                    return string.replace(/%d/i, val" +
                        "ue);\r\n                }\r\n\r\n                var words = seconds < 45 && substitut" +
                        "e($l.seconds, Math.round(seconds)) ||\r\n                  seconds < 90 && substit" +
                        "ute($l.minute, 1) ||\r\n                  minutes < 45 && substitute($l.minutes, M" +
                        "ath.round(minutes)) ||\r\n                  minutes < 90 && substitute($l.hour, 1)" +
                        " ||\r\n                  hours < 24 && substitute($l.hours, Math.round(hours)) ||\r" +
                        "\n                  hours < 42 && substitute($l.day, 1) ||\r\n                  day" +
                        "s < 30 && substitute($l.days, Math.round(days)) ||\r\n                  days < 45 " +
                        "&& substitute($l.month, 1) ||\r\n                  days < 365 && substitute($l.mon" +
                        "ths, Math.round(days / 30)) ||\r\n                  years < 1.5 && substitute($l.y" +
                        "ear, 1) ||\r\n                  substitute($l.years, Math.round(years));\r\n\r\n      " +
                        "          var separator = $l.wordSeparator || \"\";\r\n                if ($l.wordSe" +
                        "parator === undefined) { separator = \" \"; }\r\n                return $.trim([pref" +
                        "ix, words, suffix].join(separator));\r\n            },\r\n\r\n            parse: funct" +
                        "ion (iso8601) {\r\n                var s = $.trim(iso8601);\r\n                s = s" +
                        ".replace(/\\.\\d+/, \"\"); // remove milliseconds\r\n                s = s.replace(/-/" +
                        ", \"/\").replace(/-/, \"/\");\r\n                s = s.replace(/T/, \" \").replace(/Z/, " +
                        "\" UTC\");\r\n                s = s.replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, \" $1$2\"); // -0" +
                        "4:00 -> -0400\r\n                s = s.replace(/([\\+\\-]\\d\\d)$/, \" $100\"); // +09 -" +
                        "> +0900\r\n                return new Date(s);\r\n            },\r\n            dateti" +
                        "me: function (elem) {\r\n                var iso8601 = $t.isTime(elem) ? $(elem).a" +
                        "ttr(\"datetime\") : $(elem).attr(\"title\");\r\n                return $t.parse(iso860" +
                        "1);\r\n            },\r\n            isTime: function (elem) {\r\n                // j" +
                        "Query\'s `is()` doesn\'t play well with HTML5 in IE\r\n                return $(elem" +
                        ").get(0).tagName.toLowerCase() === \"time\"; // $(elem).is(\"time\");\r\n            }" +
                        "\r\n        });\r\n\r\n        // functions that can be called via $(el).timeago(\'acti" +
                        "on\')\r\n        // init is default when no action is given\r\n        // functions a" +
                        "re called with context of a single element\r\n        var functions = {\r\n         " +
                        "   init: function () {\r\n                var refresh_el = $.proxy(refresh, this);" +
                        "\r\n                refresh_el();\r\n                var $s = $t.settings;\r\n        " +
                        "        if ($s.refreshMillis > 0) {\r\n                    this._timeagoInterval =" +
                        " setInterval(refresh_el, $s.refreshMillis);\r\n                }\r\n            },\r\n" +
                        "            update: function (time) {\r\n                var parsedTime = $t.parse" +
                        "(time);\r\n                $(this).data(\'timeago\', { datetime: parsedTime });\r\n   " +
                        "             if ($t.settings.localeTitle) $(this).attr(\"title\", parsedTime.toLoc" +
                        "aleString());\r\n                refresh.apply(this);\r\n            },\r\n           " +
                        " updateFromDOM: function () {\r\n                $(this).data(\'timeago\', { datetim" +
                        "e: $t.parse($t.isTime(this) ? $(this).attr(\"datetime\") : $(this).attr(\"title\")) " +
                        "});\r\n                refresh.apply(this);\r\n            },\r\n            dispose: " +
                        "function () {\r\n                if (this._timeagoInterval) {\r\n                   " +
                        " window.clearInterval(this._timeagoInterval);\r\n                    this._timeago" +
                        "Interval = null;\r\n                }\r\n            }\r\n        };\r\n\r\n        $.fn.t" +
                        "imeago = function (action, options) {\r\n            var fn = action ? functions[a" +
                        "ction] : functions.init;\r\n            if (!fn) {\r\n                throw new Erro" +
                        "r(\"Unknown function name \'\" + action + \"\' for timeago\");\r\n            }\r\n       " +
                        "     // each over objects here and call the requested function\r\n            this" +
                        ".each(function () {\r\n                fn.call(this, options);\r\n            });\r\n " +
                        "           return this;\r\n        };\r\n\r\n        function refresh() {\r\n           " +
                        " var data = prepareData(this);\r\n            var $s = $t.settings;\r\n\r\n           " +
                        " if (!isNaN(data.datetime)) {\r\n                if ($s.cutoff == 0 || Math.abs(di" +
                        "stance(data.datetime)) < $s.cutoff) {\r\n                    $(this).text(inWords(" +
                        "data.datetime));\r\n                }\r\n            }\r\n            return this;\r\n  " +
                        "      }\r\n\r\n        function prepareData(element) {\r\n            element = $(elem" +
                        "ent);\r\n            if (!element.data(\"timeago\")) {\r\n                element.data" +
                        "(\"timeago\", { datetime: $t.datetime(element) });\r\n                var text = $.t" +
                        "rim(element.text());\r\n                if ($t.settings.localeTitle) {\r\n          " +
                        "          element.attr(\"title\", element.data(\'timeago\').datetime.toLocaleString(" +
                        "));\r\n                } else if (text.length > 0 && !($t.isTime(element) && eleme" +
                        "nt.attr(\"title\"))) {\r\n                    element.attr(\"title\", text);\r\n        " +
                        "        }\r\n            }\r\n            return element.data(\"timeago\");\r\n        }" +
                        "\r\n\r\n        function inWords(date) {\r\n            return $t.inWords(distance(dat" +
                        "e));\r\n        }\r\n\r\n        function distance(date) {\r\n            return (new Da" +
                        "te().getTime() - date.getTime());\r\n        }\r\n\r\n        // fix for IE6 suckage\r\n" +
                        "        document.createElement(\"abbr\");\r\n        document.createElement(\"time\");" +
                        "\r\n    }));\r\n</script>\r\n\r\n\r\n<script type=\"text/javascript\">\r\n    jQuery(document)" +
                        ".ready(function () {\r\n        jQuery(\"abbr.timeago\").timeago();\r\n    });\r\n</scri" +
                        "pt>\r\n\r\n\r\n\r\n\r\n</head>\r\n<body>\r\n<div id=\"AlertContainer\">\r\n<div id=\"AlertBanner\">A" +
                        "lerts</div>\r\n\t<ul id=\"AlertsList\">\r\n        "));
            global::System.Web.UI.HtmlControls.HtmlGenericControl @__ctrl1;
            @__ctrl1 = this.@__BuildControlAlertItemsHere();
            @__parser.AddParsedSubObject(@__ctrl1);
            @__parser.AddParsedSubObject(new System.Web.UI.LiteralControl(@"
    </ul>
</div>


</body>
<script type=""text/javascript"">
    findWorstAlert();
    function findWorstAlert() {
        domList = document.getElementById(""AlertsList"");
        if ((domList.innerHTML.toString()).indexOf(""class=\""red\"""") > -1) {
            AlertBanner = document.getElementById(""AlertBanner"");
            AlertBanner.style.backgroundColor = ""#d20202"";
        }
        else if ((domList.innerHTML.toString()).indexOf(""class=\""yellow\"""") > -1) {
            AlertBanner = document.getElementById(""AlertBanner"");
            AlertBanner.style.backgroundColor = ""#ff9900"";
        }
        else {
            AlertBanner = document.getElementById(""AlertBanner"");
            AlertBanner.style.backgroundColor = ""#669900"";
            if ((domList.innerHTML.toString()).indexOf(""li"") == -1) {
                domList.innerHTML = ""<li><div class=\""AlertItem\""><div class=\""AlertsImage\""><div class=\""green\""></div></div><div class=\""AlertsText\""><h1>No current alerts</h1><p>All is well in the district</p><p class=\""timestamp\"">Now</p></div></div></li>""
            }
        }
    }


</script>

"));
        }
        
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        private void InitializeControl() {
            this.@__BuildControlTree(this);
            this.Load += new global::System.EventHandler(this.Page_Load);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual object Eval(string expression) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [GeneratedCodeAttribute("Microsoft.VisualStudio.SharePoint.ProjectExtensions.CodeGenerators.SharePointWebP" +
            "artCodeGenerator", "12.0.0.0")]
        protected virtual string Eval(string expression, string format) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression, format);
        }
    }
}
